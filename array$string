#二维数组中的查找 
#在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。
#请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
class Solution:
    # array 二维列表
    def Find(self, target, array):
        c=len(array)
        l=len(array[0])
        i,j=0,l-1
        while i < c and j >= 0:
            if array[i][j] == target:
                return True
            if array[i][j] > target:
                j -= 1
            else:
                i +=1
        return False

----------------------------------------
# 顺时针打印矩阵
# 题目：输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，
# 如果输入如下矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
# 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
#思路：逆时针转动矩阵，每次弹出第一行 ； 逆时针转动的函数先把矩阵转置，再倒序即可
class Solution:
    # matrix类型为二维列表，需要返回列表
    def printMatrix(self, matrix):
        print_matrix=[]

        while matrix:
            print_matrix+=matrix.pop(0)
            if not matrix:
                break
            matrix=self.turn_anticlockwise(matrix)
        return print_matrix

    def turn_anticlockwise(self,matrix):
        r=len(matrix)
        c=len(matrix[0])
        res=[]
        for i in range(c):
            new=[]
            for j in range(r):
                new.append(matrix[j][i])
            res.append(new)
        res.reverse()
        return res
